import { connexion } from "../db/db.js";
import { sendEmail } from "../service/emailService.js";

export async function createNotification(user_id, message) {
    try {
        // Ins√©rer la notification dans la base de donn√©es
        await connexion.run(
            "INSERT INTO notifications (user_id, message, sent_at) VALUES (?, ?, datetime('now'))",
            [user_id, message]
        );

        console.log("‚úÖ Notification ins√©r√©e :", { user_id, message });

        // R√©cup√©rer l'e-mail de l'utilisateur
        const user = await connexion.get(
            "SELECT email FROM users WHERE id = ?",
            [user_id]
        );

        if (user && user.email) {
            // Envoyer l'e-mail au destinataire
            await sendEmail(user.email, "Nouvelle Notification", message);
            console.log(`üì© E-mail envoy√© √† ${user.email} avec succ√®s !`);
        } else {
            console.warn(
                `‚ö†Ô∏è Aucun e-mail trouv√© pour l'utilisateur ID ${user_id}`
            );
        }
    } catch (error) {
        console.error(
            "‚ùå Erreur lors de la cr√©ation de la notification :",
            error
        );
    }
}

export async function getNotifications(user_id) {
    console.log("üîç V√©rification user_id:", user_id);
    const notifications = await connexion.all(
        "SELECT id, user_id, message, sent_at FROM notifications WHERE user_id = ? ORDER BY sent_at DESC",
        [user_id]
    );

    return notifications;
}

// ‚úÖ Fonction pour supprimer une notification par ID
export async function deleteNotification(notification_id) {
    try {
        await connexion.run("DELETE FROM notifications WHERE id = ?", [
            notification_id,
        ]);
        console.log("‚úÖ Notification supprim√©e avec succ√®s !");
    } catch (error) {
        console.error(
            "‚ùå Erreur lors de la suppression de la notification :",
            error
        );
    }
}
